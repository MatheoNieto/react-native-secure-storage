{"version":3,"sources":["../src/application/useCases/setItem.ts","../src/application/useCases/getItem.ts","../src/application/useCases/index.ts","../src/infrastructure/nativeStorageBridge.ts","../src/infrastructure/storageRepository.ts","../src/index.ts"],"sourcesContent":["import { SecureStorageRepository } from \"@domain/repositories/secureStorageRepository\";\n\nexport class SetItemStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute(key: string, value: string) {\n    return this.repo.setItem(key, value);\n  }\n}\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\n\nexport class GetItemStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  async execute(key: string) {\n    return await this.repo.getItem(key);\n  }\n}\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\nimport {SetItemStorage} from './setItem';\nimport {GetItemStorage} from './getItem';\n\nexport const createStorageUC = (repo: SecureStorageRepository) => ({\n  setItem: (key: string, newValue: string) =>\n    new SetItemStorage(repo).execute(key, newValue),\n  getItem: (key: string) => new GetItemStorage(repo).execute(key),\n});\n","import {NativeModules} from 'react-native';\nconst {SecureStorageModule} = NativeModules;\n\nexport const NativeStorage = {\n  getItem: (key: string) => SecureStorageModule.getItem(key),\n  setItem: (key: string, value: string) =>\n    SecureStorageModule.setItem(key, value),\n  removeItem: (key: string) => SecureStorageModule.removeItem(key),\n};\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\nimport {NativeStorage} from './nativeStorageBridge';\n\nexport class SecureStorageRepositoryImpl implements SecureStorageRepository {\n  private static _instance: SecureStorageRepositoryImpl;\n\n  static getInstance() {\n    if (!SecureStorageRepositoryImpl._instance) {\n      SecureStorageRepositoryImpl._instance = new SecureStorageRepositoryImpl();\n    }\n    return SecureStorageRepositoryImpl._instance;\n  }\n\n  async setItem(key: string, value: string) {\n    return NativeStorage.setItem(key, value);\n  }\n  async getItem(key: string) {\n    console.log('SecureStorageRepositoryImpl ======<', key);\n    const newValue = NativeStorage.getItem(key);\n    console.log('SecureStorageRepositoryImpl [newValue] ======<', newValue);\n    return newValue;\n  }\n  // async removeItem(key: string): Promise<void> {\n  //   return await NativeStorage.removeItem(key);\n  // }\n}\n","import {createStorageUC} from '@application/useCases';\nimport {SecureStorageRepositoryImpl} from '@infrastructure/storageRepository';\n\nconst repo = SecureStorageRepositoryImpl.getInstance();\nexport const createUC = createStorageUC(repo);\n"],"mappings":";;;;;AAEO,IAAM,iBAAN,MAAqB;AAAA,EAC1B,YAAoBA,OAA+B;AAA/B,gBAAAA;AAAA,EAAgC;AAAA,EACpD,QAAQ,KAAa,OAAe;AAClC,WAAO,KAAK,KAAK,QAAQ,KAAK,KAAK;AAAA,EACrC;AACF;;;ACLO,IAAM,iBAAN,MAAqB;AAAA,EAC1B,YAAoBC,OAA+B;AAA/B,gBAAAA;AAAA,EAAgC;AAAA,EACpD,MAAM,QAAQ,KAAa;AACzB,WAAO,MAAM,KAAK,KAAK,QAAQ,GAAG;AAAA,EACpC;AACF;;;ACHO,IAAM,kBAAkB,CAACC,WAAmC;AAAA,EACjE,SAAS,CAAC,KAAa,aACrB,IAAI,eAAeA,KAAI,EAAE,QAAQ,KAAK,QAAQ;AAAA,EAChD,SAAS,CAAC,QAAgB,IAAI,eAAeA,KAAI,EAAE,QAAQ,GAAG;AAChE;;;ACRA,SAAQ,qBAAoB;AAC5B,IAAM,EAAC,oBAAmB,IAAI;AAEvB,IAAM,gBAAgB;AAAA,EAC3B,SAAS,CAAC,QAAgB,oBAAoB,QAAQ,GAAG;AAAA,EACzD,SAAS,CAAC,KAAa,UACrB,oBAAoB,QAAQ,KAAK,KAAK;AAAA,EACxC,YAAY,CAAC,QAAgB,oBAAoB,WAAW,GAAG;AACjE;;;ACLO,IAAM,+BAAN,MAAM,6BAA+D;AAAA,EAG1E,OAAO,cAAc;AACnB,QAAI,CAAC,6BAA4B,WAAW;AAC1C,mCAA4B,YAAY,IAAI,6BAA4B;AAAA,IAC1E;AACA,WAAO,6BAA4B;AAAA,EACrC;AAAA,EAEA,MAAM,QAAQ,KAAa,OAAe;AACxC,WAAO,cAAc,QAAQ,KAAK,KAAK;AAAA,EACzC;AAAA,EACA,MAAM,QAAQ,KAAa;AACzB,YAAQ,IAAI,uCAAuC,GAAG;AACtD,UAAM,WAAW,cAAc,QAAQ,GAAG;AAC1C,YAAQ,IAAI,kDAAkD,QAAQ;AACtE,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAIF;AArBE,cADW,8BACI;AADV,IAAM,8BAAN;;;ACAP,IAAM,OAAO,4BAA4B,YAAY;AAC9C,IAAM,WAAW,gBAAgB,IAAI;","names":["repo","repo","repo"]}