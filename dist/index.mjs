var c=class{constructor(e){this.repo=e}execute(e,r){return this.repo.setItem(e,r)}};var m=class{constructor(e){this.repo=e}async execute(e){return await this.repo.getItem(e)}};var g=class{constructor(e){this.repo=e}execute(e){return console.log("removing item from secure storage"),this.repo.removeItem(e)}};var u=class{constructor(e){this.repo=e}execute(){this.repo.removeAll(),console.log("removing all items from secure storage")}};var p=class{constructor(e){this.repo=e}execute(e,r){return this.repo.setItem(e,r)}};var l=class{constructor(e){this.repo=e}async execute(e){return await this.repo.getItem(e)}};var R=t=>({setItem:(e,r)=>new c(t).execute(e,r),getItem:e=>new m(t).execute(e),removeItem:e=>new g(t).execute(e),removeAll:()=>new u(t).execute()}),S=t=>({setItem:(e,r)=>new p(t).execute(e,r),getItem:e=>new l(t).execute(e)});import{NativeModules as M}from"react-native";var{StorageModule:f}=M,I={getItem:async t=>{if(!f)throw new Error("StorageModule not available");return await f.getItem(t)},setItem:async(t,e)=>{if(!f)throw new Error("StorageModule not available");return await f.setItem(t,e)}};var s=class{async setItem(e,r){return await I.setItem(e,r)}async getItem(e){return await I.getItem(e)??null}};import{NativeModules as A}from"react-native";var{SecureStorageModule:a}=A,i={setItem:async(t,e)=>{if(!a)throw new Error("SecureStorageModule not available");return await a.saveString(t,e)},getItem:async t=>{if(!a)throw new Error("SecureStorageModule not available");return await a.loadString(t)},removeItem:async t=>{if(!a)throw new Error("SecureStorageModule not available");return await a.removeItem(t)},removeAll:async()=>{if(!a)throw new Error("SecureStorageModule not available");return await a.removeAll()}};var w=class{async removeItem(e){return await i.removeItem(e)}async removeAll(){return await i.removeAll()}async setItem(e,r){return await i.setItem(e,r)}async getItem(e){return await i.getItem(e)??null}};import n from"react";var k=t=>{let e=new s,r=S(e),[y,v]=n.useState(null),[d,x]=n.useState(!1);n.useEffect(()=>{(async()=>{x(!0);let o=await r.getItem(t);console.log("===>LOADING DATA MOUNTED===>",o),v(o),x(!1)})()},[t]);let h=n.useCallback(o=>{r.setItem(t,o),v(o)},[y,t]),E=n.useCallback(async()=>{let o=await r.getItem(t);console.log("REFRESH VALUE",o),v(o)},[t]);return{value:y,updateValue:h,refreshValue:E,loading:d}};var b=new s,V=new w,ae=S(b),se=R(V);export{se as SecureStorage,ae as Storage,k as useStorage};
//# sourceMappingURL=index.mjs.map