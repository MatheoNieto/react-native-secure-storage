var s=class{constructor(e){this.repo=e}execute(e,o){return this.repo.setItem(e,o)}};var a=class{constructor(e){this.repo=e}async execute(e){return await this.repo.getItem(e)}};var l=t=>({setItem:(e,o)=>new s(t).execute(e,o),getItem:e=>new a(t).execute(e)});import{NativeModules as n}from"react-native";console.log("\u{1F50D} All available modules:",Object.keys(n));console.log("\u{1F50D} Total modules count:",Object.keys(n).length);var{SecureStorageModule:r}=n;r?(console.log("\u2705 SecureStorageModule found!"),console.log("Module methods:",Object.keys(r))):(console.error("\u274C SecureStorageModule is undefined!"),console.log("Available modules:",Object.keys(n)));var c={getItem:async t=>{if(!r)throw new Error("SecureStorageModule not available");return await r.getItem(t)},setItem:async(t,e)=>{if(!r)throw new Error("SecureStorageModule not available");return await r.setItem(t,e)}};var i=class{async setItem(e,o){return await c.setItem(e,o)}async getItem(e){console.log("SecureStorageRepositoryImpl [newValue] ======<",e);let o=await c.getItem(e);return console.log("SecureStorageRepositoryImpl [newValue] ======<",o),o??null}};var g=new i,v=l(g);export{v as createUC};
//# sourceMappingURL=index.mjs.map