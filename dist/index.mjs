var n=class{constructor(e){this.repo=e}execute(e,r){return this.repo.setItem(e,r)}};var c=class{constructor(e){this.repo=e}async execute(e){return await this.repo.getItem(e)}};var i=t=>({setItem:(e,r)=>new n(t).execute(e,r),getItem:e=>new c(t).execute(e)});import{NativeModules as w}from"react-native";var{SecureStorageModule:u}=w,l={getItem:async t=>{if(!u)throw new Error("SecureStorageModule not available");return await u.getItem(t)},setItem:async(t,e)=>{if(!u)throw new Error("SecureStorageModule not available");return await u.setItem(t,e)}};var s=class{async setItem(e,r){return await l.setItem(e,r)}async getItem(e){console.log("SecureStorageRepositoryImpl [newValue] ======<",e);let r=await l.getItem(e);return console.log("SecureStorageRepositoryImpl [newValue] ======<",r),r??null}};import a from"react";var D=t=>{let e=new s,r=i(e),[p,g]=a.useState(null),[S,m]=a.useState(!1);a.useEffect(()=>{(async()=>{m(!0);let o=await r.getItem(t);console.log("===>LOADING DATA MOUNTED===>",o),g(o),m(!1)})()},[t]);let f=a.useCallback(o=>{r.setItem(t,o),g(o)},[p,t]),I=a.useCallback(async()=>{let o=await r.getItem(t);console.log("REFRESH VALUE",o),g(o)},[t]);return{value:p,updateValue:f,refreshValue:I,loading:S}};var R=new s,F=i(R);export{F as createUC,D as useStorage};
//# sourceMappingURL=index.mjs.map