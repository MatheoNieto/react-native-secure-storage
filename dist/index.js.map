{"version":3,"sources":["../src/index.ts","../src/application/useCases/setItem.ts","../src/application/useCases/removeItem.ts","../src/application/useCases/getItem.ts","../src/application/useCases/removeAll.ts","../src/application/useCases/index.ts","../src/infrastructure/nativeStorageBridge.ts","../src/infrastructure/storageRepository.ts"],"sourcesContent":["import {createStorageUC} from '@application/useCases';\nimport {SecureStorageRepositoryImpl} from '@infrastructure/storageRepository';\n\nconst repo = SecureStorageRepositoryImpl.getInstance();\nconst createUC = createStorageUC(repo);\n\nexport default createUC;\n","import { SecureStorageRepository } from \"@domain/repositories/secureStorageRepository\";\n\nexport class SetItemStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute(key: string, value: string) {\n    return this.repo.setItem(key, value);\n  }\n}\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\n\nexport class RemoveItemStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute(key: string) {\n    return this.repo.removeItem(key);\n  }\n}\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\n\nexport class GetItemStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  async execute(key: string) {\n    return await this.repo.getItem(key);\n  }\n}\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\n\nexport class RemoveAllStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute() {\n    console.log('removing all items from storage');\n  }\n}\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\nimport {SetItemStorage} from './setItem';\nimport {RemoveItemStorage} from './removeItem';\nimport {GetItemStorage} from './getItem';\nimport {RemoveAllStorage} from './removeAll';\n\nexport const createStorageUC = (repo: SecureStorageRepository) => ({\n  setItem: new SetItemStorage(repo),\n  removeItem: new RemoveItemStorage(repo),\n  getItem: new GetItemStorage(repo),\n  removeAll: new RemoveAllStorage(repo),\n});\n","import {NativeModules} from 'react-native';\nconst {StorageModule} = NativeModules;\n\nexport const NativeStorage = {\n  getItem: (key: string) => StorageModule.getItem(key),\n  setItem: (key: string, value: string) => StorageModule.setItem(key, value),\n  removeItem: (key: string) => StorageModule.removeItem(key),\n};\n","import {SecureStorageRepository} from '@domain/repositories/secureStorageRepository';\nimport {NativeStorage} from './nativeStorageBridge';\n\nexport class SecureStorageRepositoryImpl implements SecureStorageRepository {\n  private static _instance: SecureStorageRepositoryImpl;\n\n  static getInstance() {\n    if (!SecureStorageRepositoryImpl._instance) {\n      SecureStorageRepositoryImpl._instance = new SecureStorageRepositoryImpl();\n    }\n    return SecureStorageRepositoryImpl._instance;\n  }\n\n  async setItem(key: string, value: string): Promise<void> {\n    return await NativeStorage.setItem(key, value);\n  }\n  async getItem(key: string): Promise<string | null> {\n    console.log('SecureStorageRepositoryImpl ======<', key);\n    const newValue = await NativeStorage.getItem(key);\n    console.log('SecureStorageRepositoryImpl [newValue] ======<', newValue);\n    return newValue;\n  }\n  async removeItem(key: string): Promise<void> {\n    return await NativeStorage.removeItem(key);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEO,IAAM,iBAAN,MAAqB;AAAA,EAC1B,YAAoBA,OAA+B;AAA/B,gBAAAA;AAAA,EAAgC;AAAA,EACpD,QAAQ,KAAa,OAAe;AAClC,WAAO,KAAK,KAAK,QAAQ,KAAK,KAAK;AAAA,EACrC;AACF;;;ACLO,IAAM,oBAAN,MAAwB;AAAA,EAC7B,YAAoBC,OAA+B;AAA/B,gBAAAA;AAAA,EAAgC;AAAA,EACpD,QAAQ,KAAa;AACnB,WAAO,KAAK,KAAK,WAAW,GAAG;AAAA,EACjC;AACF;;;ACLO,IAAM,iBAAN,MAAqB;AAAA,EAC1B,YAAoBC,OAA+B;AAA/B,gBAAAA;AAAA,EAAgC;AAAA,EACpD,MAAM,QAAQ,KAAa;AACzB,WAAO,MAAM,KAAK,KAAK,QAAQ,GAAG;AAAA,EACpC;AACF;;;ACLO,IAAM,mBAAN,MAAuB;AAAA,EAC5B,YAAoBC,OAA+B;AAA/B,gBAAAA;AAAA,EAAgC;AAAA,EACpD,UAAU;AACR,YAAQ,IAAI,iCAAiC;AAAA,EAC/C;AACF;;;ACDO,IAAM,kBAAkB,CAACC,WAAmC;AAAA,EACjE,SAAS,IAAI,eAAeA,KAAI;AAAA,EAChC,YAAY,IAAI,kBAAkBA,KAAI;AAAA,EACtC,SAAS,IAAI,eAAeA,KAAI;AAAA,EAChC,WAAW,IAAI,iBAAiBA,KAAI;AACtC;;;ACXA,0BAA4B;AAC5B,IAAM,EAAC,cAAa,IAAI;AAEjB,IAAM,gBAAgB;AAAA,EAC3B,SAAS,CAAC,QAAgB,cAAc,QAAQ,GAAG;AAAA,EACnD,SAAS,CAAC,KAAa,UAAkB,cAAc,QAAQ,KAAK,KAAK;AAAA,EACzE,YAAY,CAAC,QAAgB,cAAc,WAAW,GAAG;AAC3D;;;ACJO,IAAM,+BAAN,MAAM,6BAA+D;AAAA,EAG1E,OAAO,cAAc;AACnB,QAAI,CAAC,6BAA4B,WAAW;AAC1C,mCAA4B,YAAY,IAAI,6BAA4B;AAAA,IAC1E;AACA,WAAO,6BAA4B;AAAA,EACrC;AAAA,EAEA,MAAM,QAAQ,KAAa,OAA8B;AACvD,WAAO,MAAM,cAAc,QAAQ,KAAK,KAAK;AAAA,EAC/C;AAAA,EACA,MAAM,QAAQ,KAAqC;AACjD,YAAQ,IAAI,uCAAuC,GAAG;AACtD,UAAM,WAAW,MAAM,cAAc,QAAQ,GAAG;AAChD,YAAQ,IAAI,kDAAkD,QAAQ;AACtE,WAAO;AAAA,EACT;AAAA,EACA,MAAM,WAAW,KAA4B;AAC3C,WAAO,MAAM,cAAc,WAAW,GAAG;AAAA,EAC3C;AACF;AArBE,cADW,8BACI;AADV,IAAM,8BAAN;;;APAP,IAAM,OAAO,4BAA4B,YAAY;AACrD,IAAM,WAAW,gBAAgB,IAAI;AAErC,IAAO,gBAAQ;","names":["repo","repo","repo","repo","repo"]}