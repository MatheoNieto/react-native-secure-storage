{"version":3,"sources":["../src/index.ts","../src/application/useCases/setItem.ts","../src/application/useCases/getItem.ts","../src/application/useCases/index.ts","../src/infrastructure/nativeStorageBridge.ts","../src/infrastructure/storageRepository.ts"],"sourcesContent":["import {createStorageUC} from '@application/useCases';\nimport {SecureStorageRepositoryImpl} from '@infrastructure/storageRepository';\n\nconst repo = new SecureStorageRepositoryImpl();\nexport const createUC = createStorageUC(repo);\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\n\nexport class SetItemStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute(key: string, value: string) {\n    return this.repo.setItem(key, value);\n  }\n}\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\n\nexport class GetItemStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  async execute(key: string) {\n    return await this.repo.getItem(key);\n  }\n}\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\nimport {SetItemStorage} from './setItem';\nimport {GetItemStorage} from './getItem';\n\nexport const createStorageUC = (repo: SecureStorageRepository) => ({\n  setItem: (key: string, newValue: string) =>\n    new SetItemStorage(repo).execute(key, newValue),\n  getItem: (key: string) => new GetItemStorage(repo).execute(key),\n});\n","import {NativeModules} from 'react-native';\nconst {SecureStorageModule} = NativeModules;\nconsole.log('Available native modules:', NativeModules);\n\nexport const nativeStorage = {\n  getItem: async (key: string) => {\n    return await SecureStorageModule.getItem(key);\n  },\n  setItem: async (key: string, value: string) => {\n    return await SecureStorageModule.setItem(key, value);\n  },\n};\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\nimport {nativeStorage} from './nativeStorageBridge';\n\nexport class SecureStorageRepositoryImpl implements SecureStorageRepository {\n  async setItem(key: string, value: string) {\n    return await nativeStorage.setItem(key, value);\n  }\n  async getItem(key: string) {\n    console.log('SecureStorageRepositoryImpl [newValue] ======<', key);\n    const newValue = await nativeStorage.getItem(key);\n    console.log('SecureStorageRepositoryImpl [newValue] ======<', newValue);\n    return newValue ?? null;\n  }\n}\n"],"mappings":"yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,cAAAE,IAAA,eAAAC,EAAAH,GCEO,IAAMI,EAAN,KAAqB,CAC1B,YAAoBC,EAA+B,CAA/B,UAAAA,CAAgC,CACpD,QAAQC,EAAaC,EAAe,CAClC,OAAO,KAAK,KAAK,QAAQD,EAAKC,CAAK,CACrC,CACF,ECLO,IAAMC,EAAN,KAAqB,CAC1B,YAAoBC,EAA+B,CAA/B,UAAAA,CAAgC,CACpD,MAAM,QAAQC,EAAa,CACzB,OAAO,MAAM,KAAK,KAAK,QAAQA,CAAG,CACpC,CACF,ECHO,IAAMC,EAAmBC,IAAmC,CACjE,QAAS,CAACC,EAAaC,IACrB,IAAIC,EAAeH,CAAI,EAAE,QAAQC,EAAKC,CAAQ,EAChD,QAAUD,GAAgB,IAAIG,EAAeJ,CAAI,EAAE,QAAQC,CAAG,CAChE,GCRA,IAAAI,EAA4B,wBACtB,CAAC,oBAAAC,CAAmB,EAAI,gBAC9B,QAAQ,IAAI,4BAA6B,eAAa,EAE/C,IAAMC,EAAgB,CAC3B,QAAS,MAAOC,GACP,MAAMF,EAAoB,QAAQE,CAAG,EAE9C,QAAS,MAAOA,EAAaC,IACpB,MAAMH,EAAoB,QAAQE,EAAKC,CAAK,CAEvD,ECRO,IAAMC,EAAN,KAAqE,CAC1E,MAAM,QAAQC,EAAaC,EAAe,CACxC,OAAO,MAAMC,EAAc,QAAQF,EAAKC,CAAK,CAC/C,CACA,MAAM,QAAQD,EAAa,CACzB,QAAQ,IAAI,iDAAkDA,CAAG,EACjE,IAAMG,EAAW,MAAMD,EAAc,QAAQF,CAAG,EAChD,eAAQ,IAAI,iDAAkDG,CAAQ,EAC/DA,GAAY,IACrB,CACF,ELVA,IAAMC,EAAO,IAAIC,EACJC,EAAWC,EAAgBH,CAAI","names":["index_exports","__export","createUC","__toCommonJS","SetItemStorage","repo","key","value","GetItemStorage","repo","key","createStorageUC","repo","key","newValue","SetItemStorage","GetItemStorage","import_react_native","SecureStorageModule","nativeStorage","key","value","SecureStorageRepositoryImpl","key","value","nativeStorage","newValue","repo","SecureStorageRepositoryImpl","createUC","createStorageUC"]}