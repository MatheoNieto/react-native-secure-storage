{"version":3,"sources":["../src/index.ts","../src/application/useCases/secureStorage/setItem.ts","../src/application/useCases/secureStorage/getItem.ts","../src/application/useCases/secureStorage/removeItem.ts","../src/application/useCases/secureStorage/removeAll.ts","../src/application/useCases/storage/setItem.ts","../src/application/useCases/storage/getItem.ts","../src/application/useCases/index.ts","../src/infrastructure/nativeStorageBridge.ts","../src/infrastructure/repositories/storageRepository.ts","../src/infrastructure/nativeSecureStorageBridge.ts","../src/infrastructure/repositories/secureStorageRepository.ts","../src/presentation/hooks/useStorage.ts"],"sourcesContent":["import {createSecureStorageUC, createStorageUC} from '@application/useCases';\nimport {StorageRepositoryImpl} from '@infrastructure/repositories/storageRepository';\nimport {SecureStorageRepositoryImpl} from '@infrastructure/repositories/secureStorageRepository';\n\nconst repoStorage = new StorageRepositoryImpl();\nconst repoSecureStorage = new SecureStorageRepositoryImpl();\n\nexport const Storage = createStorageUC(repoStorage);\nexport const SecureStorage = createSecureStorageUC(repoSecureStorage);\n\nexport * from '@presentation/hooks/useStorage';\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\n\nexport class SetItemSecureStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute(key: string, value: string) {\n    return this.repo.setItem(key, value);\n  }\n}\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\n\nexport class GetItemSecureStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  async execute(key: string) {\n    return await this.repo.getItem(key);\n  }\n}\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\n\nexport class RemoveItemSecureStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute(key: string) {\n    console.log('removing item from secure storage');\n    return this.repo.removeItem(key);\n  }\n}\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\n\nexport class RemoveAllSecureStorage {\n  constructor(private repo: SecureStorageRepository) {}\n  execute() {\n    this.repo.removeAll();\n    console.log('removing all items from secure storage');\n  }\n}\n","import {StorageRepository} from '@domain/StorageRepository';\n\nexport class SetItemStorage {\n  constructor(private repo: StorageRepository) {}\n  execute(key: string, value: string) {\n    return this.repo.setItem(key, value);\n  }\n}\n","import {StorageRepository} from '@domain/StorageRepository';\n\nexport class GetItemStorage {\n  constructor(private repo: StorageRepository) {}\n  async execute(key: string) {\n    return await this.repo.getItem(key);\n  }\n}\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\nimport {StorageRepository} from '@domain/storageRepository';\n\nimport {SetItemSecureStorage} from './secureStorage/setItem';\nimport {GetItemSecureStorage} from './secureStorage/getItem';\nimport {RemoveItemSecureStorage} from './secureStorage/removeItem';\nimport {RemoveAllSecureStorage} from './secureStorage/removeAll';\nimport {SetItemStorage} from './storage/setItem';\nimport {GetItemStorage} from './storage/getItem';\n\nexport const createSecureStorageUC = (repo: SecureStorageRepository) => ({\n  setItem: (key: string, newValue: string) =>\n    new SetItemSecureStorage(repo).execute(key, newValue),\n  getItem: (key: string) => new GetItemSecureStorage(repo).execute(key),\n  removeItem: (key: string) => new RemoveItemSecureStorage(repo).execute(key),\n  removeAll: () => new RemoveAllSecureStorage(repo).execute(),\n});\n\nexport const createStorageUC = (repo: StorageRepository) => ({\n  setItem: (key: string, newValue: string) =>\n    new SetItemStorage(repo).execute(key, newValue),\n  getItem: (key: string) => new GetItemStorage(repo).execute(key),\n});\n","import {NativeModules} from 'react-native';\n\nconst {StorageModule} = NativeModules;\n\nexport const nativeStorage = {\n  getItem: async (key: string) => {\n    if (!StorageModule) {\n      throw new Error('StorageModule not available');\n    }\n    return await StorageModule.getItem(key);\n  },\n  setItem: async (key: string, value: string) => {\n    if (!StorageModule) {\n      throw new Error('StorageModule not available');\n    }\n    return await StorageModule.setItem(key, value);\n  },\n};\n","import {StorageRepository} from '@domain/storageRepository';\nimport {nativeStorage} from '../nativeStorageBridge';\n\nexport class StorageRepositoryImpl implements StorageRepository {\n  async setItem(key: string, value: string) {\n    return await nativeStorage.setItem(key, value);\n  }\n  async getItem(key: string) {\n    console.log('SecureStorageRepositoryImpl [newValue] ======<', key);\n    const newValue = await nativeStorage.getItem(key);\n    console.log('SecureStorageRepositoryImpl [newValue] ======<', newValue);\n    return newValue ?? null;\n  }\n}\n","import {NativeModules} from 'react-native';\nimport {get} from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nconst {SecureStorageModule} = NativeModules;\n\nexport const nativeSecureStorage = {\n  setItem: async (key: string, value: string) => {\n    if (!SecureStorageModule) {\n      throw new Error('SecureStorageModule not available');\n    }\n    return await SecureStorageModule.saveString(key, value);\n  },\n  getItem: async (key: string) => {\n    if (!SecureStorageModule) {\n      throw new Error('SecureStorageModule not available');\n    }\n    return await SecureStorageModule.loadString(key);\n  },\n  removeItem: async (key: string) => {\n    if (!SecureStorageModule) {\n      throw new Error('SecureStorageModule not available');\n    }\n    return await SecureStorageModule.removeItem(key);\n  },\n  removeAll: async () => {\n    if (!SecureStorageModule) {\n      throw new Error('SecureStorageModule not available');\n    }\n    return await SecureStorageModule.removeAll();\n  },\n};\n","import {SecureStorageRepository} from '@domain/secureStorageRepository';\nimport {nativeSecureStorage} from '../nativeSecureStorageBridge';\n\nexport class SecureStorageRepositoryImpl implements SecureStorageRepository {\n  async removeItem(key: string): Promise<void> {\n    return await nativeSecureStorage.removeItem(key);\n  }\n  async removeAll(): Promise<void> {\n    return await nativeSecureStorage.removeAll();\n  }\n  async setItem(key: string, value: string) {\n    return await nativeSecureStorage.setItem(key, value);\n  }\n  async getItem(key: string) {\n    const newValue = await nativeSecureStorage.getItem(key);\n    return newValue ?? null;\n  }\n}\n","import {createStorageUC} from '@application/useCases';\nimport React from 'react';\nimport {StorageRepositoryImpl} from '@infrastructure/repositories/storageRepository';\n\nexport const useStorage = (keyName: string) => {\n  const repo = new StorageRepositoryImpl();\n  const createUC = createStorageUC(repo);\n\n  const [value, setValue] = React.useState<string | null>(null);\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const storedValue = await createUC.getItem(keyName);\n      console.log('===>LOADING DATA MOUNTED===>', storedValue);\n      setValue(storedValue);\n      setLoading(false);\n    })();\n  }, [keyName]);\n\n  const updateValue = React.useCallback(\n    (newValue: string) => {\n      createUC.setItem(keyName, newValue);\n      setValue(newValue);\n    },\n    [value, keyName],\n  );\n\n  const refreshValue = React.useCallback(async () => {\n    const newValue = await createUC.getItem(keyName);\n    console.log('REFRESH VALUE', newValue);\n    setValue(newValue);\n  }, [keyName]);\n\n  return {\n    value,\n    updateValue,\n    refreshValue,\n    loading,\n  };\n};\n"],"mappings":"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","names":["index_exports","__export","SecureStorage","Storage","useStorage","__toCommonJS","SetItemSecureStorage","repo","key","value","GetItemSecureStorage","repo","key","RemoveItemSecureStorage","repo","key","RemoveAllSecureStorage","repo","SetItemStorage","repo","key","value","GetItemStorage","repo","key","createSecureStorageUC","repo","key","newValue","SetItemSecureStorage","GetItemSecureStorage","RemoveItemSecureStorage","RemoveAllSecureStorage","createStorageUC","SetItemStorage","GetItemStorage","import_react_native","StorageModule","nativeStorage","key","value","StorageRepositoryImpl","key","value","nativeStorage","newValue","import_react_native","SecureStorageModule","nativeSecureStorage","key","value","SecureStorageRepositoryImpl","key","nativeSecureStorage","value","import_react","useStorage","keyName","repo","StorageRepositoryImpl","createUC","createStorageUC","value","setValue","React","loading","setLoading","storedValue","updateValue","newValue","refreshValue","repoStorage","StorageRepositoryImpl","repoSecureStorage","SecureStorageRepositoryImpl","Storage","createStorageUC","SecureStorage","createSecureStorageUC"]}